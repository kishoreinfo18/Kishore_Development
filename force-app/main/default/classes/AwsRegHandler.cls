//TODO:This autogenerated class includes the basics for a Registration
//Handler class. You will need to customize it to ensure it meets your needs and
//the data provided by the third party.

global class AwsRegHandler implements Auth.RegistrationHandler{
     global boolean canCreateUser(Auth.UserData data) {
        //TODO: Check whether we want to allow creation of a user with this data
        //Set<String> s = new Set<String>{'usernamea', 'usernameb', 'usernamec'};
        //if(s.contains(data.username)) {
            //return true;
        //}
        return true;
    }

    global User createUser(Id portalId, Auth.UserData data)
    {
        system.debug('data is:'+data);
        system.debug('portalId is:'+portalId);
        if(!canCreateUser(data)) {
            //Returning null or throwing an exception fails the SSO flow
            User u = [Select id, name, email from user where email =: data.email];
            if(u !=null)
                return u;
            return null;
        } 
         Profile p = [SELECT Id FROM profile WHERE name='System Administrator'];   
         user u = new user();
         u.email = data.email;
         u.lastName = 'AM';
         u.firstName = 'Arav';
         u.username = data.email+'.'+'dev';
         String alias = 'arav';
         u.alias = alias;
         u.languagelocalekey = 'en_US';
         u.localesidkey = 'en_GB';
         u.emailEncodingKey = 'UTF-8';
         u.timeZoneSidKey = 'America/Los_Angeles';
         u.profileId = p.Id;
          return u;
         
      /*  string userEmail = data.email;
        Integer indexPos = userEmail.indexOf('@'); //for finding @ postion in a string
        string uName = userEmail.substring(0,indexPos);
        string uDomain = userEmail.substring(indexPos);
        
        //Contact c = [SELECT Email,FirstName,LastName,Id,AccountId FROM Contact Where Email=:data.email];
        User u = new User();
        Profile p = [SELECT Id FROM profile WHERE name='Custom Customer Community Login User'];
        //u.username = data.username + '@acmecorp3.com';
        List<Account> accntLst = [SELECT Id,Firstname,LastName FROM Account WHERE recordtype.Name=:'Individual Client' AND PersonEmail = :data.email];
        if(accntLst.isEmpty()){
            u = [SELECT Id,FirstName,LastName,Alias,Email,UserName,languagelocalekey,localesidkey,emailEncodingKey,timeZoneSidKey,profileId,contactId FROM User WHERE Email=:'dummyUser@simplyhealth.com' and isActive=:true];
            updateUser(u.Id, portalId, data);
            return u;
        }
        else
        {
            Contact c = [SELECT Email,FirstName,LastName,Id,AccountId FROM Contact Where Email=:data.email];
            for(Account a : accntLst){
                u.username = uName + uDomain;
                system.debug(u.username+'     '+uName + uDomain);
                u.email = data.email;
                u.lastName = a.FirstName;
                u.firstName = a.LastName;
                String alias = a.FirstName;
                //Alias must be 8 characters or less
                //if(alias.length() > 8) {
                  //  alias = alias.substring(0, 8);
                //}
                u.alias = alias;
                u.languagelocalekey = 'en_US';
                u.localesidkey = 'en_GB';
                u.emailEncodingKey = 'UTF-8';
                u.timeZoneSidKey = 'America/Los_Angeles';
                u.profileId = p.Id;
                u.contactId = c.Id;
            }
            
        }*/
       /* for(Account a : [SELECT Id,FirstName,LastName,Alias,Email,UserName,languagelocalekey,localesidkey,emailEncodingKey,timeZoneSidKey,profileId,contactId FROM User WHERE Email=:'dummyUser@simplyhealth.com']){
            if(a!=null){
                u.username = uName + uDomain;
                system.debug(u.username+'     '+uName + uDomain);
                u.email = data.email;
                u.lastName = a.FirstName;
                u.firstName = a.LastName;
                String alias = a.FirstName;
                //Alias must be 8 characters or less
                //if(alias.length() > 8) {
                  //  alias = alias.substring(0, 8);
                //}
                u.alias = alias;
                u.languagelocalekey = 'en_US';
                u.localesidkey = 'en_GB';
                u.emailEncodingKey = 'UTF-8';
                u.timeZoneSidKey = 'America/Los_Angeles';
                u.profileId = p.Id;
              //  u.contactId = c.Id;
                
            }
            else
            {
                
            }
            
        }*/
       // return u;
    
    }

   global void updateUser(Id userId, Id portalId, Auth.UserData data){
       /* User usrDetails = [SELECT Id,FirstName,LastName,Email FROM USER Where Id = :userId and isActive=true];
        if(usrDetails == null ){
            createUser(portalId,data);
        }
        else
        {
        User u = new User(id=userId);
        //TODO: Customize the username. Must be 80 characters or less.
        //u.username = data.username + '@myorg.com';
        u.email = usrDetails.email;
        u.lastName = usrDetails.LastName;
        u.firstName = usrDetails.FirstName;
        u.isActive = true;
        //String alias = data.username;
        //Alias must be 8 characters or less
        //if(alias.length() > 8) {
            //alias = alias.substring(0, 8);
        //}
        //u.alias = alias;
        update(u);
        }*/
        List<user> usrLst = [SELECT Id,FirstName,LastName,Email FROM USER Where Id = :userId and isActive=true];
        if(!usrLst.isEmpty()){
            for(User usrDetails : usrLst ){
                User u = new User(id=usrDetails.Id);
                //TODO: Customize the username. Must be 80 characters or less.
                //u.username = data.username + '@myorg.com';
                u.email = usrDetails.email;
                u.lastName = usrDetails.LastName;
                u.firstName = usrDetails.FirstName;
                u.isActive = true;
                //String alias = data.username;
                //Alias must be 8 characters or less
                //if(alias.length() > 8) {
                    //alias = alias.substring(0, 8);
                //}
                //u.alias = alias;
                update(u);
            }
        }   
    }    
}